        -:    0:Source:../sub/zma_parse_process_rrc.cpp
        -:    0:Programs:103
        -:    1:// --------------------------------------------------------------------
        -:    2://	Z80 Macro Assembler parse
        -:    3:// ====================================================================
        -:    4://	2019/05/04	t.hara
        -:    5:// --------------------------------------------------------------------
        -:    6:
        -:    7:#include "zma_parse.hpp"
        -:    8:#include "zma_text.hpp"
        -:    9:#include "zma_parse_process.hpp"
        -:   10:#include <string>
        -:   11:#include <cctype>
        -:   12:#include <iostream>
        -:   13:#include <fstream>
        -:   14:#include <sstream>
        -:   15:#include <algorithm>
        -:   16:
        -:   17:// --------------------------------------------------------------------
       33:   18:bool CZMA_PARSE_RRC::process( CZMA_INFORMATION& info, CZMA_PARSE* p_last_line ) {
        -:   19:
       33:   20:	update_flags( &info, p_last_line );
       33:   21:	if( this->opecode_source8( info, 0xCB, 0x08 ) ) {
        -:   22:		//	log
       30:   23:		if( !this->is_analyze_phase ) {
       20:   24:			log.write_line_infomation( this->line_no, this->code_address, this->file_address, get_line() );
       20:   25:			if( data.size() == 2 ) {
        8:   26:				if( this->data[1] == 0x0E ) {
        2:   27:					log.write_cycle_information( 17, 8 );			//	RRC [HL]
        -:   28:				}
        -:   29:				else {
       14:   30:					log.write_cycle_information( 10, 2 );			//	RRC r
        -:   31:				}
        -:   32:			}
        -:   33:			else {
        4:   34:				log.write_cycle_information( 25, 10 );			//	RRC [IX+d]
        -:   35:			}
       10:   36:			log.write_dump( this->code_address, this->file_address, this->data );
       10:   37:			log.write_separator();
        -:   38:		}
        -:   39:		return check_all_fixed();
        -:   40:	}
        6:   41:	put_error( "Illegal operand" );
        3:   42:	return false;
      138:   43:}
        -:   44:
