        -:    0:Source:../sub/zma_parse_process_org.cpp
        -:    0:Programs:105
        -:    1:// --------------------------------------------------------------------
        -:    2://	Z80 Macro Assembler parse
        -:    3:// ====================================================================
        -:    4://	2019/05/04	t.hara
        -:    5:// --------------------------------------------------------------------
        -:    6:
        -:    7:#include "zma_parse.hpp"
        -:    8:#include "zma_text.hpp"
        -:    9:#include "zma_parse_process.hpp"
        -:   10:#include <string>
        -:   11:#include <cctype>
        -:   12:#include <iostream>
        -:   13:#include <fstream>
        -:   14:#include <sstream>
        -:   15:#include <algorithm>
        -:   16:
        -:   17:#include "zma_parse_process_org.hpp"
        -:   18:
        -:   19:// --------------------------------------------------------------------
       95:   20:bool CZMA_PARSE_ORG::process( CZMA_INFORMATION& info, CZMA_PARSE* p_last_line ) {
        -:   21:	CVALUE address;
        -:   22:	int index;
        -:   23:
       95:   24:	update_flags( &info, p_last_line );
       95:   25:	index = this->expression( info, 1, address );
       95:   26:	this->code_size = 0;
       95:   27:	if( index == 0 ) {
       40:   28:		put_error( CZMA_ERROR::get( CZMA_ERROR_CODE::ILLEGAL_EXPRESSION ) );
        8:   29:		return false;
        -:   30:	}
       87:   31:	if( address.value_type != CVALUE_TYPE::CV_INTEGER ) {
       20:   32:		put_error( CZMA_ERROR::get( CZMA_ERROR_CODE::ILLEGAL_PARAMETER ) );
        4:   33:		return false;
        -:   34:	}
      166:   35:	if( index < (int)words.size() ) {
       20:   36:		put_error( CZMA_ERROR::get( CZMA_ERROR_CODE::ILLEGAL_PARAMETER ) );
        4:   37:		return false;
        -:   38:	}
       79:   39:	this->is_data_fixed = true;
       79:   40:	this->code_address = address.i;
       79:   41:	this->next_code_address = address.i;
        -:   42:	//	log
       79:   43:	if( !this->is_analyze_phase ) {
       52:   44:		log.write_line_infomation( this->line_no, this->code_address, this->file_address, get_line() );
       26:   45:		log.write_separator();
        -:   46:	}
        -:   47:	return check_all_fixed();
      156:   48:}
        -:   49:
