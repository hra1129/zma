        -:    0:Source:../sub/zma_parse_process_user_message.cpp
        -:    0:Programs:106
        -:    1:// --------------------------------------------------------------------
        -:    2://	Z80 Macro Assembler parse
        -:    3:// ====================================================================
        -:    4://	2019/05/04	t.hara
        -:    5:// --------------------------------------------------------------------
        -:    6:
        -:    7:#include "zma_parse.hpp"
        -:    8:#include "zma_text.hpp"
        -:    9:#include "zma_parse_process.hpp"
        -:   10:#include <string>
        -:   11:#include <cctype>
        -:   12:#include <iostream>
        -:   13:#include <fstream>
        -:   14:#include <sstream>
        -:   15:#include <algorithm>
        -:   16:
        -:   17:// --------------------------------------------------------------------
      282:   18:bool CZMA_PARSE_USER_MESSAGE::process( CZMA_INFORMATION& info, CZMA_PARSE* p_last_line ) {
        -:   19:	CVALUE v;
        -:   20:
      282:   21:	set_code_size( &info, 0 );
      282:   22:	update_flags( &info, p_last_line );
      564:   23:	if( words.size() == 1 ) {
       15:   24:		put_error( CZMA_ERROR::get( CZMA_ERROR_CODE::TOO_MANY_PARAMETERS ) );
        3:   25:		return false;
        -:   26:	}
      279:   27:	if( this->expression( info, 1, v, false ) == 0 ) {
      300:   28:		put_error( CZMA_ERROR::get( CZMA_ERROR_CODE::ILLEGAL_PARAMETER ) );
       60:   29:		return false;
        -:   30:	}
      438:   31:	else if( v.is_unknown() ){
       10:   32:		put_error( CZMA_ERROR::get( CZMA_ERROR_CODE::ILLEGAL_PARAMETER ) );
        2:   33:		return false;
        -:   34:	}
      217:   35:	if( v.is_integer() ) {
       27:   36:		v.s = std::to_string( v.i );
        -:   37:	}
        -:   38:	//	log
      217:   39:	if( !this->is_analyze_phase ) {
      132:   40:		put_message( v.s );
        -:   41:	}
        -:   42:	return true;
      154:   43:}
