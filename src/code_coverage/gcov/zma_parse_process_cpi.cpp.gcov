        -:    0:Source:../sub/zma_parse_process_cpi.cpp
        -:    0:Programs:106
        -:    1:// --------------------------------------------------------------------
        -:    2://	Z80 Macro Assembler parse
        -:    3:// ====================================================================
        -:    4://	2019/05/04	t.hara
        -:    5:// --------------------------------------------------------------------
        -:    6:
        -:    7:#include "zma_parse.hpp"
        -:    8:#include "zma_text.hpp"
        -:    9:#include "zma_parse_process.hpp"
        -:   10:#include <string>
        -:   11:#include <cctype>
        -:   12:#include <iostream>
        -:   13:#include <fstream>
        -:   14:#include <sstream>
        -:   15:#include <algorithm>
        -:   16:
        -:   17:#include "zma_parse_process_cpi.hpp"
        -:   18:
        -:   19:// --------------------------------------------------------------------
        9:   20:bool CZMA_PARSE_CPI::process( CZMA_INFORMATION& info, CZMA_PARSE* p_last_line ) {
        -:   21:
        9:   22:	update_flags( &info, p_last_line );
        9:   23:	if( this->opecode( info, 0xED, 0xA1 ) ) {
        -:   24:		//	log
        6:   25:		if( !this->is_analyze_phase ) {
        4:   26:			log.write_line_infomation( this->line_no, this->code_address, this->file_address, get_line() );
        4:   27:			log.write_cycle_information( 18, 6 );	//	CPI
        8:   28:			log.push_back( "[\t" + get_line() + "] Z80:18cyc, R800:6cyc" );
        2:   29:			log.write_dump( this->code_address, this->file_address, this->data );
        2:   30:			log.write_separator();
        -:   31:		}
        -:   32:		return check_all_fixed();
        -:   33:	}
       15:   34:	put_error( CZMA_ERROR::get( CZMA_ERROR_CODE::ILLEGAL_OPERAND ) );
        3:   35:	return false;
      162:   36:}
        -:   37:
