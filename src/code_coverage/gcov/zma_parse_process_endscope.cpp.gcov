        -:    0:Source:../sub/zma_parse_process_endscope.cpp
        -:    0:Programs:103
        -:    1:// --------------------------------------------------------------------
        -:    2://	Z80 Macro Assembler parse
        -:    3:// ====================================================================
        -:    4://	2019/05/04	t.hara
        -:    5:// --------------------------------------------------------------------
        -:    6:
        -:    7:#include "zma_parse.hpp"
        -:    8:#include "zma_text.hpp"
        -:    9:#include "zma_parse_process.hpp"
        -:   10:#include <string>
        -:   11:#include <cctype>
        -:   12:#include <iostream>
        -:   13:#include <fstream>
        -:   14:#include <sstream>
        -:   15:#include <algorithm>
        -:   16:
        -:   17:// --------------------------------------------------------------------
    #####:   18:bool CZMA_PARSE_ENDSCOPE::process( CZMA_INFORMATION& info, CZMA_PARSE* p_last_line ) {
        -:   19:	std::string s, s_scope;
        -:   20:
    #####:   21:	update_flags( &info, p_last_line );
    #####:   22:	if( words.size() > 1 ) {
    #####:   23:		put_error( "Too many parameters." );
    #####:   24:		return false;
        -:   25:	}
    #####:   26:	this->is_data_fixed = true;
        -:   27:	this->set_code_size( &info, 0 );
    #####:   28:	if( info.scope.size() < 1 ) {
    #####:   29:		put_error( "Invalid command." );
    #####:   30:		return false;
        -:   31:	}
    #####:   32:	if( info.scope[ info.scope.size() - 1 ][0] == '@' ) {
    #####:   33:		put_error( "Invalid command." );
    #####:   34:		return false;
        -:   35:	}
    #####:   36:	s_scope = info.get_scope_path();
        -:   37:	info.scope.pop_back();
        -:   38:
        -:   39:	//	log
    #####:   40:	if( !is_analyze_phase ) {
    #####:   41:		log.write_line_infomation( this->line_no, this->code_address, this->file_address, get_line() );
    #####:   42:		log.write_message( "Exit scope: " + s_scope );
    #####:   43:		log.write_separator();
        -:   44:	}
        -:   45:	return check_all_fixed();
       12:   46:}
        -:   47:
