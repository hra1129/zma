更新履歴
===============================================================================
2019/07/09	v1.0.0
	初版
-------------------------------------------------------------------------------
2019/07/13	v1.0.1
	(1) マクロ内で else付きのif文を使うと、エラーが表示されて正常にアセンブル
	    されないバグを修正。
	(2) include/msx.asm にいくつかのエントリを追加。
-------------------------------------------------------------------------------
2019/07/15	v1.0.2
	(1) includeしたファイルの中にエラーがあると、そのエラー表示のファイル名部分
	    が正常に表示されないバグを修正。
-------------------------------------------------------------------------------
2019/07/16	v1.0.3
	(1) SUB A, n を B6 n とアセンブルしてしまうバグを修正。正しくは D6 n。
	(2) NEG を EB 44 とアセンブルしてしまうバグを修正。正しくは ED 44。
-------------------------------------------------------------------------------
2019/07/16	v1.0.4
	(1) LD [IX+0],[100] のような記述をすると、その行はコードサイズ 0 になり、
	    エラーを出さずに成功したかのようなフリをするバグを修正。
-------------------------------------------------------------------------------
2019/09/08	v1.0.5
	(1) include/repeat/macro 等を組み合わせた場合にアドレス計算を間違えるケース
	    があったバグを修正。
	(2) include/msx.asm にいくつかのエントリを追加。
-------------------------------------------------------------------------------
2019/10/04	v1.0.6
	(1) "\n" のようなエスケープシーケンスを使うとおかしな文字列が出力されるバグ
	    があったのを修正
	(2) 'a' のような文字コード (ASCII文字のみ) を記述できる機能を追加
-------------------------------------------------------------------------------
2019/12/07	v1.0.7
	(1) 'a' のような文字コード対応をしたときに EX AF,AF' を正常に処理できなく
		なっていたバグを修正
	(2) LD [HL],n が 32byte 扱いになって、ログに出る消費サイクル数も大きくなって
		いたバグを修正
-------------------------------------------------------------------------------
2020/01/29	v1.0.8
	(1) 最後に改行のない1行があると、その行が処理されないバグを修正
	(2) LD [IX + n], HL をアセンブルすると処理が終わらなくなるバグを修正。
		[HL],HL や [IY+n],HL も同様。
	(3) 範囲外のレンジを指定した場合にエラーになるように修正。
		LD A, 1000 等。
-------------------------------------------------------------------------------
2020/02/02	v1.0.9
	(1) message疑似命令実行時にログだけで無く、標準出力にも出力するように修正。
-------------------------------------------------------------------------------
2020/10/29	v1.0.10
	(1) add ix, hl 等が通り、add ix, ix 等がエラーになるバグを修正
	(2) 未定義命令 SLL に対応
		左1bitシフトして、bit0 には 1 が入る未定義命令。
	(3) 未定義命令 OUT [C],0 に対応
		定数 0 を I/O port C へ出力する未定義命令。
	(4) 未定義命令 IN F, [C] に対応
		I/O port C から読み出した値を Fレジスタにセットする未定義命令。
	(5) 未定義命令 SET bit, [IX+d], reg に対応
		メモリ [IX+d] の 指定bit を 1 にして、その値を reg にも格納する未定義命令。
	(6) 未定義命令 RES bit, [IX+d], reg に対応
		メモリ [IX+d] の 指定bit を 0 にして、その値を reg にも格納する未定義命令。
	(7) 未定義命令 RR [IX+d], reg に対応
	(8) 未定義命令 RL [IX+d], reg に対応
	(9) 未定義命令 SRA [IX+d], reg に対応
	(10) 未定義命令 SRL [IX+d], reg に対応
		[IX+d] をシフト後に、その結果を reg にも格納する未定義命令。
-------------------------------------------------------------------------------
2020/11/04	v1.0.11
	(1) zma.sym を出力する機能を追加
-------------------------------------------------------------------------------
2020/12/01	v1.0.12
	(1) エラー発生時に終了コード 1 を返すように修正。正常時は終了コード 0。
-------------------------------------------------------------------------------
2020/12/11	v1.0.13
	(1) ALIGN疑似命令を追加
		書式: ALIGN ブロックサイズ
		意味: アドレスがブロックサイズの倍数になる位置までパディングする。
		      記述位置がすでにブロックサイズの倍数の場合は何もパディングしない。
		      パディングは、0 を詰める。

	(2) SPACE疑似命令を追加
		書式: SPACE 領域サイズ [, 初期値]
		意味: 指定の領域サイズだけ、初期値を詰める。
		      SPACE 10, 5 は、下記と同義である。
		      DB 5,5,5,5,5,5,5,5,5,5

		      初期値を省略すると、0 を指定したことになる。
		      SPACE 3 は、下記と同義である。
		      DB 0,0,0
-------------------------------------------------------------------------------
2020/12/29	v1.0.14
	(1) BINARY_LINK疑似命令を追加
		書式: BINARY_LINK ファイル名
		意味: バイナリファイルを記述位置に挿入する。外部ツールで作成したデータを
		      そのまま挿入したい場合に利用する。
-------------------------------------------------------------------------------
2021/1/6	v1.0.15
	(1) 0xFFFFFF80 のような値(32bit整数の負数を16進数で記述)があると処理を諦めてしまうバグを修正
-------------------------------------------------------------------------------
2022/6/19	v1.0.16 alpha
	(1) ソースコードリファクタリング
		zma_parse_process.cpp を命令毎に分解して sub/zma_parse_process_XXXX.cpp に。
		typedef enum を enum class に変更。
		新しいバージョンの VisualStudio で山ほど警告が発生していたのを修正。
	(2) ログの出力書式を大幅に見直し
		ログの書式は zma_logger.cpp の中に集約することで、ログのデザイン変更をやりやすくした。
		ログの書式を整理した。
		アドレス決定できなかった場合にアドレス値として ffffffff を出していたのを XXXX に変更。
	(3) SLL命令のログ内にコメントを追記
		Z80未定義命令 SLL は、R800では使用できず、SLA と等価な動作になる旨、コメント出力するようにした。
	(4) CP, AND, OR, XOR, SUB を 1オペランドの記述（ザイログニーモニック相当）も認識するように変更
	(5) JP (HL), JP (IX), JP (IY) の記述（ザイログニーモニック相当）も認識するように変更
	(6) 16進数の記述に 0x?? だけでなく ??H や $?? も受け付けるように変更
	(7) IF文, INCLUDE文においてファイルオフセットが正しく計算されない場合があるバグを修正
	(8) FILE_ADDRESS と同様に使える $$ を追加
	(9) CHG_CHAR_SET命令, MAPPING_CHAR命令を追加。説明書にも追記。ログの最後に作成したキャラマップを追加。
	(10) 後方へ分岐する場合に、分岐先のラベル定義が無視される場合があるバグを修正。
	(11) シンボル宣言 ( xxx = 10 等 ) が一部おかしくなっていたバグを修正。
	(12) エラーメッセージを整理。
	(13) DEFB に文字列も列挙できるように変更。
	(14) DEFS を SPACE命令のように使えるオプション -DEFS を追加。
	(15) コマンドラインオプション -Iインクルードパス を追加。
	(16) コマンドラインオプション -Dシンボル名=値 を追加。
	(17) SPACE命令でログに値をダンプするように修正。
	(18) グローバルシンボル宣言 := の代わりに EQU も使えるように修正。
	(19) ラベル・グローバルラベルを、命令と同一行に記述できるように修正。
	(20) IF文についてはログに書き出さないように修正（選択された中身は書き出される）。
	(21) 出力ファイルサイズが 0 になる場合にエラーになるように修正。
	(22) IntelHEXで出力する -HEXオプションを追加
	(23) DJNZ でオペランドに式を入れるとエラーになるバグを修正
	(24) コマンドラインオプション -EALL を追加。省略時は最小限のエラー表示。指定時は詳細なエラー表示。
	(25) LINK～ENDL疑似命令を追加。
